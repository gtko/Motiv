name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build site
        run: npm run build
        env:
          PUBLIC_API_URL: https://motiv-app-preview-${{ github.event.pull_request.number }}.gtux-prog.workers.dev/api
      
      - name: Deploy Workers to preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env preview --name motiv-app-preview-${{ github.event.pull_request.number }}
          workingDirectory: .
      
      - name: Deploy to Cloudflare Pages Preview
        id: cloudflare
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=motiv --branch=preview-${{ github.event.pull_request.number }}
      
      - name: Get deployment URL
        id: deployment
        run: |
          echo "url=${{ steps.cloudflare.outputs.deployment-url }}" >> $GITHUB_OUTPUT
      
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ github.event.pull_request.number }}';
            const url = '${{ steps.deployment.outputs.url }}';
            const workerUrl = `https://motiv-app-preview-${prNumber}.gtux-prog.workers.dev`;
            const comment = `## ðŸš€ Preview Deployment Ready!
            
            | Environment | URL |
            |-------------|-----|
            | **Preview Site** | ${url} |
            | **API Endpoint** | ${workerUrl}/api |
            | **PR Number** | #${prNumber} |
            
            This preview will be automatically deleted when the PR is closed.`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment Ready')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }